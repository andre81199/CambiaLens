import {
  require_react
} from "./chunk-MH2SOZDS.js";
import {
  __toESM
} from "./chunk-BYPFWIQ6.js";

// node_modules/.pnpm/raviger@4.1.2_react@18.3.1/node_modules/raviger/dist/module.js
var import_react = __toESM(require_react());
var c = (0, import_react.createContext)("");
var l = (0, import_react.createContext)(null);
function RouterProvider({ basePath: e2 = "", path: n2, children: r2 }) {
  return import_react.default.createElement(c.Provider, { value: e2 }, import_react.default.createElement(l.Provider, { value: null != n2 ? n2 : null }, r2));
}
var h = true;
try {
  h = void 0 === window;
} catch (t2) {
}
var g = /* @__PURE__ */ new Set();
var d = false;
var f = false;
var P = [0, 0];
function shouldCancelNavigation() {
  return P = [window.scrollX, window.scrollY], d ? f : Array.from(g).some((t2) => {
    const e2 = t2();
    return !!e2 && (f = !window.confirm(e2), d = true, setTimeout(() => {
      d = false, f = false;
    }, 0), f);
  });
}
function usePath(t2) {
  const e2 = (0, import_react.useContext)(l), n2 = useBasePath();
  t2 = t2 || n2;
  const [, r2] = (0, import_react.useState)(getFormattedPath(t2));
  return useLocationChange((0, import_react.useCallback)(({ path: t3 }) => r2(t3), []), { basePath: t2, inheritBasePath: !t2, onInitial: true }), e2 || getFormattedPath(t2);
}
function useBasePath() {
  return (0, import_react.useContext)(c);
}
function useFullPath() {
  const [t2, e2] = (0, import_react.useState)(getCurrentPath());
  return useLocationChange((0, import_react.useCallback)(({ path: t3 }) => e2(t3), []), { inheritBasePath: false }), t2 || "/";
}
function useHash({ stripHash: t2 = true } = {}) {
  const [e2, n2] = (0, import_react.useState)(window.location.hash), a2 = (0, import_react.useCallback)(() => {
    const t3 = window.location.hash;
    t3 !== e2 && n2(t3);
  }, [n2, e2]);
  return (0, import_react.useLayoutEffect)(() => (window.addEventListener("hashchange", a2, false), () => window.removeEventListener("hashchange", a2)), [a2]), useLocationChange(a2), t2 ? e2.substring(1) : e2;
}
function getCurrentPath() {
  return h ? "/" : window.location.pathname || "/";
}
function getCurrentHash() {
  if (h) {
    const t2 = "/", e2 = t2.indexOf("#");
    return t2.substring(e2);
  }
  return window.location.hash;
}
function useLocationChange(t2, { inheritBasePath: e2 = true, basePath: a2 = "", isActive: o2, onInitial: s2 = false } = {}) {
  if (h)
    return;
  const u2 = useBasePath();
  e2 && u2 && (a2 = u2);
  const c2 = (0, import_react.useRef)(t2);
  (0, import_react.useLayoutEffect)(() => {
    c2.current = t2;
  });
  const l2 = (0, import_react.useCallback)(() => {
    (void 0 === o2 || isPredicateActive(o2)) && (shouldCancelNavigation() || c2.current(getFormattedLocation(a2)));
  }, [o2, a2]);
  (0, import_react.useLayoutEffect)(() => (window.addEventListener("popstate", l2), () => window.removeEventListener("popstate", l2)), [l2]), function useMountedLayout(t3, e3, { onInitial: a3 = false } = {}) {
    const o3 = (0, import_react.useRef)(a3);
    (0, import_react.useLayoutEffect)(() => {
      o3.current ? t3() : o3.current = true;
    }, e3);
  }(() => {
    (void 0 === o2 || isPredicateActive(o2)) && c2.current(getFormattedLocation(a2));
  }, [a2, o2], { onInitial: s2 });
}
function useHistory() {
  const [t2, e2] = (0, import_react.useState)(getRavigerHistory());
  return useLocationChange((0, import_react.useCallback)(() => e2(getRavigerHistory()), [e2])), t2;
}
function getRavigerHistory() {
  return h ? { scrollRestoration: "manual", state: null } : { scrollRestoration: window.history.scrollRestoration, state: window.history.state };
}
function getFormattedPath(t2) {
  const e2 = getCurrentPath(), n2 = t2 && !function isPathInBase(t3, e3) {
    return !!(t3 && e3 && e3.toLowerCase().startsWith(t3.toLowerCase()));
  }(t2, e2);
  return null === e2 || n2 ? null : decodeURIComponent(t2 ? e2.replace(function basePathMatcher(t3) {
    return new RegExp("^" + t3, "i");
  }(t2), "") || "/" : e2);
}
function getFormattedLocation(t2) {
  const e2 = getFormattedPath(t2);
  return { basePath: t2, path: e2, pathname: e2, fullPath: getCurrentPath(), search: window.location.search, hash: getCurrentHash(), host: window.location.host, hostname: window.location.hostname, href: window.location.href, origin: window.location.origin };
}
function isPredicateActive(t2) {
  return /* @__PURE__ */ function isFunction(t3) {
    return !!t3 && "function" == typeof t3;
  }(t2) ? t2() : t2;
}
var w = [null, null];
function useRoutes(e2, { basePath: n2 = "", routeProps: a2 = {}, overridePathParams: s2 = true, matchTrailingSlash: u2 = true } = {}) {
  const c2 = usePath(n2) && getFormattedPath(n2);
  !function useRedirectDetection(t2, e3) {
    const [, n3] = (0, import_react.useState)({}), a3 = (0, import_react.useCallback)(() => n3({}), []);
    (0, import_react.useLayoutEffect)(() => {
      e3 !== getFormattedPath(t2) && a3();
    }, [a3, t2, e3]);
  }(n2, usePath(n2));
  const l2 = function useMatchRoute(t2, e3, { routeProps: n3, overridePathParams: r2, matchTrailingSlash: a3 }) {
    e3 = trailingMatch(e3, a3);
    const o2 = useMatchers(Object.keys(t2));
    if (null === e3)
      return null;
    const [i2, s3] = getMatchParams(e3, o2);
    return i2 ? t2[i2.path](r2 ? { ...s3, ...n3 } : { ...n3, ...s3 }) : null;
  }(e2, c2, { routeProps: a2, overridePathParams: s2, matchTrailingSlash: u2 });
  return l2 && null !== c2 ? import_react.default.createElement(RouterProvider, { basePath: n2, path: c2 }, l2) : null;
}
function usePathParams(t2, e2 = {}) {
  const n2 = !Array.isArray(t2), [r2, a2] = usePathOptions(t2, e2);
  if (null === r2)
    return n2 ? null : w;
  const [o2, i2] = getMatchParams(r2, a2);
  return o2 ? n2 ? i2 : [o2.path, i2] : n2 ? null : w;
}
function useMatch(t2, e2 = {}) {
  var n2;
  const [r2, a2] = usePathOptions(t2, e2), o2 = a2.find(({ regex: t3 }) => null == r2 ? void 0 : r2.match(t3));
  return null !== (n2 = null == o2 ? void 0 : o2.path) && void 0 !== n2 ? n2 : null;
}
function usePathOptions(t2, { basePath: e2, matchTrailingSlash: n2 = true }) {
  const r2 = useMatchers(Array.isArray(t2) ? t2 : [t2]);
  return [trailingMatch(usePath(e2), n2), r2];
}
function useMatchers(t2) {
  return (0, import_react.useMemo)(() => t2.map(createRouteMatcher), [(e2 = t2, [...e2].sort().join(":"))]);
  var e2;
}
function getMatchParams(t2, e2) {
  let n2 = null;
  const r2 = e2.find(({ regex: e3 }) => (n2 = t2.match(e3), !!n2));
  if (!r2 || null === n2)
    return w;
  const a2 = r2.props.reduce((t3, e3, r3) => (t3[e3] = n2[r3 + 1], t3), {});
  return [r2, a2];
}
function createRouteMatcher(t2) {
  var e2, n2;
  return { path: t2, regex: new RegExp(`${"*" === t2.substr(0, 1) ? "" : "^"}${(n2 = t2, n2.replace(/[-\\^$+?.()|[\]{}]/g, "\\$&")).replace(/:[a-zA-Z]+/g, "([^/]+)").replace(/\*/g, "")}${"*" === t2.substr(-1) ? "" : "$"}`, "i"), props: (null !== (e2 = t2.match(/:[a-zA-Z]+/g)) && void 0 !== e2 ? e2 : []).map((t3) => t3.substr(1)) };
}
function trailingMatch(t2, e2) {
  return null === t2 || e2 && t2 && "/" === t2[t2.length - 1] && t2.length > 1 && (t2 = t2.substring(0, t2.length - 1)), t2;
}
var v = "";
function navigate(t2, e2) {
  if ("string" != typeof t2)
    throw new Error('"url" must be a string, was provided a(n) ' + typeof t2);
  if (Array.isArray(null == e2 ? void 0 : e2.query))
    throw new Error('"query" a serializable object or URLSearchParams');
  if (shouldCancelNavigation())
    return;
  if ((null == e2 ? void 0 : e2.query) && (t2 += "?" + new URLSearchParams(e2.query).toString()), v = t2, function isAbsolute(t3) {
    return /^(?:[a-z]+:)?\/\//i.test(t3);
  }(t2) && !function isCurrentOrigin(t3) {
    return window.location.origin === new URL(t3).origin;
  }(t2))
    return void window.location.assign(t2);
  (null == e2 ? void 0 : e2.replace) ? window.history.replaceState(null == e2 ? void 0 : e2.state, "", t2) : window.history.pushState(null == e2 ? void 0 : e2.state, "", t2);
  const n2 = new PopStateEvent("popstate");
  n2.__tag = "raviger:navigation", dispatchEvent(n2);
}
function useNavigationPrompt(t2 = true, e2 = "Are you sure you want to leave this page?") {
  h || ((0, import_react.useLayoutEffect)(() => {
    const onPopStateNavigation = () => {
      shouldCancelNavigation() && function undoNavigation(t3) {
        window.history.pushState(null, null, t3), setTimeout(() => {
          window.scrollTo(...P);
        }, 0);
      }(v);
    };
    return window.addEventListener("popstate", onPopStateNavigation), () => window.removeEventListener("popstate", onPopStateNavigation);
  }, []), (0, import_react.useLayoutEffect)(() => {
    const handler = (n2) => {
      if (t2)
        return n2 ? function cancelNavigation(t3, e3) {
          return t3.preventDefault(), t3.returnValue = e3, e3;
        }(n2, e2) : e2;
    };
    return function addInterceptor(t3) {
      window.addEventListener("beforeunload", t3), g.add(t3);
    }(handler), () => function removeInterceptor(t3) {
      window.removeEventListener("beforeunload", t3), g.delete(t3);
    }(handler);
  }, [t2, e2]));
}
function useNavigate(t2 = "") {
  const e2 = useBasePath();
  return (0, import_react.useCallback)((n2, r2) => {
    const a2 = t2 || e2;
    navigate(n2.startsWith("/") ? a2 + n2 : n2, r2);
  }, [e2, t2]);
}
function useQueryParams(t2 = parseQuery, e2 = serializeQuery) {
  const [n2, r2] = (0, import_react.useState)(getQueryString()), a2 = (0, import_react.useCallback)((r3, { replace: a3 = true } = {}) => {
    let o2 = getCurrentPath();
    r3 = a3 ? r3 : { ...t2(n2), ...r3 };
    const i2 = e2(r3).toString();
    i2 && (o2 += "?" + i2), a3 || (o2 += getCurrentHash()), navigate(o2);
  }, [n2, t2, e2]);
  return useLocationChange((0, import_react.useCallback)(() => r2(getQueryString()), [])), [t2(n2), a2];
}
function parseQuery(t2) {
  const e2 = new URLSearchParams(t2);
  return Object.fromEntries(e2.entries());
}
function serializeQuery(t2) {
  return new URLSearchParams(Object.entries(t2).filter(([, t3]) => null !== t3)).toString();
}
function getQueryString() {
  if (h) {
    const t2 = "/", e2 = t2.indexOf("?");
    return -1 === e2 ? "" : t2.substring(e2 + 1);
  }
  return window.location.search;
}
function Redirect({ to: t2, query: e2, replace: n2 = true, merge: r2 = true }) {
  return useRedirect(usePath(), t2, { query: e2, replace: n2, merge: r2 }), null;
}
function useRedirect(t2, e2, { query: n2, replace: a2 = true, merge: o2 = true } = {}) {
  const i2 = usePath(), [s2] = useQueryParams(), u2 = getCurrentHash();
  let c2 = e2;
  const l2 = new URLSearchParams({ ...o2 ? s2 : {}, ...n2 }).toString();
  l2 && (c2 += "?" + l2), o2 && u2 && u2.length && (c2 += u2), (0, import_react.useLayoutEffect)(() => {
    i2 === t2 && navigate(c2, { replace: a2 });
  }, [t2, c2, a2, i2]);
}
var m = (0, import_react.forwardRef)(function Link({ href: e2, basePath: n2, ...r2 }, a2) {
  e2 = getLinkHref(e2, n2 = useLinkBasePath(n2));
  const { onClick: o2, target: s2 } = r2, u2 = (0, import_react.useCallback)((t2) => {
    try {
      o2 && o2(t2);
    } catch (e3) {
      throw t2.preventDefault(), e3;
    }
    (function shouldTrap(t3, e3) {
      return !t3.defaultPrevented && 0 === t3.button && !(e3 || "_self" === e3) && !(t3.metaKey || t3.altKey || t3.ctrlKey || t3.shiftKey);
    })(t2, s2) && (t2.preventDefault(), navigate(t2.currentTarget.href));
  }, [o2, s2]);
  return import_react.default.createElement("a", { ...r2, href: e2, onClick: u2, ref: a2 });
});
var p = (0, import_react.forwardRef)(function ActiveLink({ basePath: e2, className: n2, exactActiveClass: r2, activeClass: a2, ...o2 }, i2) {
  e2 = useLinkBasePath(e2);
  const s2 = useFullPath();
  let { href: u2 } = o2;
  return u2 = function absolutePathName(t2) {
    return t2.startsWith("/") ? t2 : new URL(t2, document.baseURI).pathname;
  }(getLinkHref(u2, e2)), r2 && s2 === u2 && (n2 = `${null != n2 ? n2 : ""} ${r2}`.trim()), a2 && s2.startsWith(u2) && (n2 = `${null != n2 ? n2 : ""} ${a2}`.trim()), import_react.default.createElement(m, { ...o2, basePath: e2, className: n2, ref: i2 });
});
function useLinkBasePath(t2) {
  const e2 = useBasePath();
  return "/" === t2 ? "" : t2 || e2;
}
function getLinkHref(t2, e2 = "") {
  return t2.startsWith("/") ? e2 + t2 : t2;
}
export {
  p as ActiveLink,
  m as Link,
  Redirect,
  RouterProvider,
  navigate,
  useBasePath,
  useFullPath,
  useHash,
  useHistory,
  useLocationChange,
  useMatch,
  useNavigate,
  useNavigationPrompt,
  usePath,
  usePathParams,
  useQueryParams,
  useRedirect,
  useRoutes
};
//# sourceMappingURL=raviger.js.map
